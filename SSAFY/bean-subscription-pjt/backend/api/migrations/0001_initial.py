# Generated by Django 2.2.4 on 2019-11-06 04:15

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('method', models.TextField(blank=True)),
                ('percents', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=500)),
                ('content', models.TextField(blank=True)),
                ('image', models.TextField(blank=True)),
                ('country', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Percent',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('value', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True)),
                ('approval', models.BooleanField(default=False)),
                ('subscription', models.DateTimeField(default=datetime.datetime(2019, 9, 10, 13, 47, 43, 630123))),
                ('gender', models.CharField(default='M', max_length=10)),
                ('birthday', models.CharField(default='', max_length=20)),
                ('years', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription_manager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.IntegerField(default=0)),
                ('approval', models.BooleanField(default=False)),
                ('request_day', models.DateTimeField(auto_now_add=True)),
                ('apply_day', models.DateTimeField(auto_now=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile_sub', to='api.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number', models.IntegerField(default=0)),
                ('comment', models.TextField(blank=True)),
                ('blend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Blend')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('weeks', models.IntegerField(default=0)),
                ('month', models.IntegerField(default=0)),
                ('year', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('in_item', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.Blend')),
            ],
        ),
        migrations.AddField(
            model_name='blend',
            name='items',
            field=models.ManyToManyField(blank=True, related_name='to_blend', to='api.Item'),
        ),
    ]
